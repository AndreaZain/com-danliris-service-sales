// <auto-generated />
using System;
using Com.Danliris.Service.Sales.Lib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Com.Danliris.Service.Sales.Lib.Migrations
{
    [DbContext(typeof(SalesDbContext))]
    [Migration("20180717043726_updateModelsFpSalesContract")]
    partial class updateModelsFpSalesContract
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.FinishingPrinting.FinishingPrintingSalesContractDetailModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Color")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(25);

                    b.Property<int>("CurrencyID");

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(25);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long?>("FinishingPrintingSalesContractId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("Price");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<bool>("UseIncomeTax");

                    b.HasKey("Id");

                    b.HasIndex("FinishingPrintingSalesContractId");

                    b.ToTable("FinishingPrintingSalesContractDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.FinishingPrinting.FinishingPrintingSalesContractModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountBankAccountName");

                    b.Property<string>("AccountBankCode")
                        .HasMaxLength(25);

                    b.Property<string>("AccountBankCurrencyCode")
                        .HasMaxLength(25);

                    b.Property<int>("AccountBankCurrencyID")
                        .HasMaxLength(255);

                    b.Property<double>("AccountBankCurrencyRate");

                    b.Property<string>("AccountBankCurrencySymbol")
                        .HasMaxLength(25);

                    b.Property<int>("AccountBankID");

                    b.Property<string>("AccountBankName")
                        .HasMaxLength(255);

                    b.Property<string>("AccountBankNumber")
                        .HasMaxLength(255);

                    b.Property<bool>("Active");

                    b.Property<string>("AgentCode")
                        .HasMaxLength(25);

                    b.Property<int>("AgentID");

                    b.Property<string>("AgentName")
                        .HasMaxLength(255);

                    b.Property<double>("Amount");

                    b.Property<int>("AutoIncrementNumber");

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(25);

                    b.Property<int>("BuyerID");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(1000);

                    b.Property<string>("BuyerType")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .HasMaxLength(25);

                    b.Property<string>("Commission")
                        .HasMaxLength(255);

                    b.Property<string>("CommodityCode")
                        .HasMaxLength(25);

                    b.Property<string>("CommodityDescription")
                        .HasMaxLength(1000);

                    b.Property<int>("CommodityID");

                    b.Property<string>("CommodityName")
                        .HasMaxLength(255);

                    b.Property<string>("Condition")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DeliveredTo")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset>("DeliverySchedule");

                    b.Property<string>("DesignMotiveCode")
                        .HasMaxLength(25);

                    b.Property<int>("DesignMotiveID");

                    b.Property<string>("DesignMotiveName")
                        .HasMaxLength(255);

                    b.Property<string>("DispositionNumber")
                        .HasMaxLength(255);

                    b.Property<bool>("FromStock");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("MaterialCode")
                        .HasMaxLength(25);

                    b.Property<string>("MaterialConstructionCode")
                        .HasMaxLength(25);

                    b.Property<int>("MaterialConstructionId");

                    b.Property<string>("MaterialConstructionName")
                        .HasMaxLength(255);

                    b.Property<int>("MaterialID");

                    b.Property<string>("MaterialName")
                        .HasMaxLength(255);

                    b.Property<string>("MaterialWidth")
                        .HasMaxLength(255);

                    b.Property<double>("OrderQuantity");

                    b.Property<string>("OrderTypeCode")
                        .HasMaxLength(25);

                    b.Property<int>("OrderTypeID");

                    b.Property<string>("OrderTypeName")
                        .HasMaxLength(255);

                    b.Property<string>("Packing")
                        .HasMaxLength(1000);

                    b.Property<string>("PieceLength")
                        .HasMaxLength(255);

                    b.Property<double>("PointLimit");

                    b.Property<int>("PointSystem");

                    b.Property<string>("QualityCode")
                        .HasMaxLength(25);

                    b.Property<int>("QualityID");

                    b.Property<string>("QualityName")
                        .HasMaxLength(255);

                    b.Property<double>("RemainingQuantity");

                    b.Property<string>("SalesContractNo")
                        .HasMaxLength(25);

                    b.Property<string>("ShipmentDescription")
                        .HasMaxLength(1000);

                    b.Property<double>("ShippingQuantityTolerance")
                        .HasMaxLength(1000);

                    b.Property<string>("TermOfPaymentCode")
                        .HasMaxLength(25);

                    b.Property<int>("TermOfPaymentID");

                    b.Property<bool>("TermOfPaymentIsExport");

                    b.Property<string>("TermOfPaymentName")
                        .HasMaxLength(255);

                    b.Property<string>("TermOfShipment")
                        .HasMaxLength(1000);

                    b.Property<string>("TransportFee")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<int>("UOMID");

                    b.Property<string>("UOMUnit")
                        .HasMaxLength(255);

                    b.Property<bool>("UseIncomeTax");

                    b.Property<string>("YarnMaterialCode")
                        .HasMaxLength(25);

                    b.Property<int>("YarnMaterialID");

                    b.Property<string>("YarnMaterialName")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("SalesContractNo")
                        .IsUnique()
                        .HasFilter("[SalesContractNo] IS NOT NULL");

                    b.ToTable("FinishingPrintingSalesContracts");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrder_Account_RolesModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Name")
                        .HasMaxLength(1000);

                    b.Property<long?>("ProductionOrderModelId");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ProductionOrderModelId");

                    b.ToTable("ProductionOrder_Account_Roles");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrder_DetailModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("ColorRequest")
                        .HasMaxLength(255);

                    b.Property<string>("ColorTemplate")
                        .HasMaxLength(255);

                    b.Property<string>("ColorType")
                        .HasMaxLength(255);

                    b.Property<string>("ColorTypeId")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long?>("ProductionOrderModelId");

                    b.Property<double>("Quantity");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ProductionOrderModelId");

                    b.ToTable("ProductionOrder_Details");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrder_LampStandardModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Name")
                        .HasMaxLength(1000);

                    b.Property<long?>("ProductionOrderModelId");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ProductionOrderModelId");

                    b.ToTable("ProductionOrder_LampStandard");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrder_RunWidthModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long?>("ProductionOrderModelId");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ProductionOrderModelId");

                    b.ToTable("ProductionOrder_RunWidth");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrder_StandardTestsModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Name")
                        .HasMaxLength(1000);

                    b.Property<long?>("ProductionOrderModelId");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ProductionOrderModelId");

                    b.ToTable("ProductionOrder_StandardTests");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrderModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<string>("AccountUserName");

                    b.Property<bool>("Active");

                    b.Property<string>("ArticleFabricEdge")
                        .HasMaxLength(1000);

                    b.Property<long>("AutoIncreament");

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(255);

                    b.Property<long>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(1000);

                    b.Property<string>("BuyerType")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DeliveryDate");

                    b.Property<string>("DesignCode")
                        .HasMaxLength(255);

                    b.Property<string>("DesignMotiveCode")
                        .HasMaxLength(25);

                    b.Property<int>("DesignMotiveID");

                    b.Property<string>("DesignMotiveName")
                        .HasMaxLength(255);

                    b.Property<string>("DesignNumber")
                        .HasMaxLength(255);

                    b.Property<double>("DistributedQuantity");

                    b.Property<string>("FinishTypeCode")
                        .HasMaxLength(255);

                    b.Property<long>("FinishTypeId");

                    b.Property<string>("FinishTypeName")
                        .HasMaxLength(1000);

                    b.Property<string>("FinishTypeRemark")
                        .HasMaxLength(1000);

                    b.Property<string>("FinishWidth")
                        .HasMaxLength(255);

                    b.Property<string>("HandlingStandard")
                        .HasMaxLength(255);

                    b.Property<bool>("IsClosed");

                    b.Property<bool>("IsCompleted");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsRequested");

                    b.Property<bool>("IsUsed");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("MaterialCode")
                        .HasMaxLength(255);

                    b.Property<string>("MaterialConstructionCode")
                        .HasMaxLength(255);

                    b.Property<long>("MaterialConstructionId");

                    b.Property<string>("MaterialConstructionName")
                        .HasMaxLength(1000);

                    b.Property<string>("MaterialConstructionRemark");

                    b.Property<long>("MaterialId");

                    b.Property<string>("MaterialName")
                        .HasMaxLength(1000);

                    b.Property<string>("MaterialOrigin")
                        .HasMaxLength(255);

                    b.Property<double>("MaterialPrice");

                    b.Property<string>("MaterialTags")
                        .HasMaxLength(255);

                    b.Property<string>("MaterialWidth")
                        .HasMaxLength(1000);

                    b.Property<string>("OrderNo")
                        .HasMaxLength(255);

                    b.Property<double>("OrderQuantity");

                    b.Property<string>("OrderTypeCode")
                        .HasMaxLength(255);

                    b.Property<long>("OrderTypeId");

                    b.Property<string>("OrderTypeName")
                        .HasMaxLength(1000);

                    b.Property<string>("OrderTypeRemark")
                        .HasMaxLength(1000);

                    b.Property<string>("PackingInstruction")
                        .HasMaxLength(1000);

                    b.Property<string>("ProcessTypeCode")
                        .HasMaxLength(255);

                    b.Property<long>("ProcessTypeId");

                    b.Property<string>("ProcessTypeName")
                        .HasMaxLength(1000);

                    b.Property<string>("ProcessTypeRemark")
                        .HasMaxLength(1000);

                    b.Property<string>("ProfileFirstName")
                        .HasMaxLength(1000);

                    b.Property<string>("ProfileGender")
                        .HasMaxLength(255);

                    b.Property<string>("ProfileLastName")
                        .HasMaxLength(1000);

                    b.Property<string>("Remark")
                        .HasMaxLength(1000);

                    b.Property<string>("Run")
                        .HasMaxLength(255);

                    b.Property<long>("SalesContractId");

                    b.Property<string>("SalesContractNo")
                        .HasMaxLength(255);

                    b.Property<string>("Sample")
                        .HasMaxLength(1000);

                    b.Property<double>("ShippingQuantityTolerance");

                    b.Property<string>("ShrinkageStandard")
                        .HasMaxLength(255);

                    b.Property<string>("StandardTestCode")
                        .HasMaxLength(255);

                    b.Property<long>("StandardTestId");

                    b.Property<string>("StandardTestName")
                        .HasMaxLength(1000);

                    b.Property<string>("StandardTestRemark")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.Property<string>("YarnMaterialCode")
                        .HasMaxLength(255);

                    b.Property<long>("YarnMaterialId");

                    b.Property<string>("YarnMaterialName")
                        .HasMaxLength(1000);

                    b.Property<string>("YarnMaterialRemark")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.ToTable("ProductionOrder");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.Spinning.SpinningSalesContractModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountBankCode")
                        .HasMaxLength(255);

                    b.Property<long>("AccountBankId");

                    b.Property<string>("AccountBankName")
                        .HasMaxLength(1000);

                    b.Property<string>("AccountBankNumber");

                    b.Property<string>("AccountCurrencyCode")
                        .HasMaxLength(255);

                    b.Property<string>("AccountCurrencyId")
                        .HasMaxLength(255);

                    b.Property<bool>("Active");

                    b.Property<string>("AgentCode")
                        .HasMaxLength(255);

                    b.Property<long>("AgentId");

                    b.Property<string>("AgentName")
                        .HasMaxLength(1000);

                    b.Property<int>("AutoIncrementNumber");

                    b.Property<string>("BankName")
                        .HasMaxLength(255);

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(255);

                    b.Property<long>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(1000);

                    b.Property<string>("BuyerType")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("Comission")
                        .HasMaxLength(1000);

                    b.Property<string>("ComodityCode")
                        .HasMaxLength(255);

                    b.Property<string>("ComodityDescription");

                    b.Property<long>("ComodityId");

                    b.Property<string>("ComodityName")
                        .HasMaxLength(1000);

                    b.Property<string>("ComodityType")
                        .HasMaxLength(255);

                    b.Property<string>("Condition")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DeliveredTo")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset>("DeliverySchedule");

                    b.Property<string>("DispositionNumber")
                        .HasMaxLength(255);

                    b.Property<bool>("FromStock");

                    b.Property<string>("IncomeTax")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("OrderQuantity");

                    b.Property<string>("Packing")
                        .HasMaxLength(1000);

                    b.Property<string>("PieceLength")
                        .HasMaxLength(1000);

                    b.Property<double>("Price");

                    b.Property<string>("QualityCode")
                        .HasMaxLength(255);

                    b.Property<long>("QualityId");

                    b.Property<string>("QualityName")
                        .HasMaxLength(1000);

                    b.Property<string>("Remark");

                    b.Property<string>("SalesContractNo")
                        .HasMaxLength(255);

                    b.Property<string>("ShipmentDescription");

                    b.Property<double>("ShippingQuantityTolerance");

                    b.Property<string>("TermOfPaymentCode")
                        .HasMaxLength(255);

                    b.Property<long>("TermOfPaymentId");

                    b.Property<bool>("TermOfPaymentIsExport");

                    b.Property<string>("TermOfPaymentName")
                        .HasMaxLength(1000);

                    b.Property<string>("TermOfShipment")
                        .HasMaxLength(1000);

                    b.Property<string>("TransportFee")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("SpinningSalesContract");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.Weaving.WeavingSalesContractModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountBankCode")
                        .HasMaxLength(255);

                    b.Property<long>("AccountBankId");

                    b.Property<string>("AccountBankName")
                        .HasMaxLength(1000);

                    b.Property<string>("AccountBankNumber");

                    b.Property<string>("AccountCurrencyCode")
                        .HasMaxLength(255);

                    b.Property<string>("AccountCurrencyId")
                        .HasMaxLength(255);

                    b.Property<bool>("Active");

                    b.Property<string>("AgentCode")
                        .HasMaxLength(255);

                    b.Property<long>("AgentId");

                    b.Property<string>("AgentName")
                        .HasMaxLength(1000);

                    b.Property<int>("AutoIncrementNumber");

                    b.Property<string>("BankName")
                        .HasMaxLength(255);

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(255);

                    b.Property<long>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(1000);

                    b.Property<string>("BuyerType")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("Comission")
                        .HasMaxLength(1000);

                    b.Property<string>("ComodityCode")
                        .HasMaxLength(255);

                    b.Property<string>("ComodityDescription");

                    b.Property<long>("ComodityId");

                    b.Property<string>("ComodityName")
                        .HasMaxLength(1000);

                    b.Property<string>("ComodityType")
                        .HasMaxLength(255);

                    b.Property<string>("Condition")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DeliveredTo")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset>("DeliverySchedule");

                    b.Property<string>("DispositionNumber")
                        .HasMaxLength(255);

                    b.Property<bool>("FromStock");

                    b.Property<string>("IncomeTax")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("MaterialConstructionCode")
                        .HasMaxLength(255);

                    b.Property<long>("MaterialConstructionId");

                    b.Property<string>("MaterialConstructionName")
                        .HasMaxLength(1000);

                    b.Property<string>("MaterialConstructionRemark");

                    b.Property<string>("MaterialWidth")
                        .HasMaxLength(255);

                    b.Property<double>("OrderQuantity");

                    b.Property<string>("Packing")
                        .HasMaxLength(1000);

                    b.Property<string>("PieceLength")
                        .HasMaxLength(1000);

                    b.Property<double>("Price");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<double>("ProductPrice");

                    b.Property<string>("ProductTags")
                        .HasMaxLength(255);

                    b.Property<string>("QualityCode")
                        .HasMaxLength(255);

                    b.Property<long>("QualityId");

                    b.Property<string>("QualityName")
                        .HasMaxLength(1000);

                    b.Property<string>("Remark");

                    b.Property<string>("SalesContractNo")
                        .HasMaxLength(255);

                    b.Property<string>("ShipmentDescription");

                    b.Property<double>("ShippingQuantityTolerance");

                    b.Property<string>("TermOfPaymentCode")
                        .HasMaxLength(255);

                    b.Property<long>("TermOfPaymentId");

                    b.Property<bool>("TermOfPaymentIsExport");

                    b.Property<string>("TermOfPaymentName")
                        .HasMaxLength(1000);

                    b.Property<string>("TermOfShipment")
                        .HasMaxLength(1000);

                    b.Property<string>("TransportFee")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.Property<string>("YarnMaterialCode")
                        .HasMaxLength(255);

                    b.Property<long>("YarnMaterialId");

                    b.Property<string>("YarnMaterialName")
                        .HasMaxLength(1000);

                    b.Property<string>("YarnMaterialRemark");

                    b.HasKey("Id");

                    b.ToTable("WeavingSalesContract");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.FinishingPrinting.FinishingPrintingSalesContractDetailModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.FinishingPrinting.FinishingPrintingSalesContractModel", "FinishingPrintingSalesContract")
                        .WithMany("Details")
                        .HasForeignKey("FinishingPrintingSalesContractId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrder_Account_RolesModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrderModel", "ProductionOrderModel")
                        .WithMany("Roles")
                        .HasForeignKey("ProductionOrderModelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrder_DetailModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrderModel", "ProductionOrderModel")
                        .WithMany("Details")
                        .HasForeignKey("ProductionOrderModelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrder_LampStandardModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrderModel", "ProductionOrderModel")
                        .WithMany("LampStandards")
                        .HasForeignKey("ProductionOrderModelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrder_RunWidthModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrderModel", "ProductionOrderModel")
                        .WithMany("RunWidths")
                        .HasForeignKey("ProductionOrderModelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrder_StandardTestsModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrderModel", "ProductionOrderModel")
                        .WithMany()
                        .HasForeignKey("ProductionOrderModelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
